imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@ClearContentBundle/Resources/config/services.yml" }
    - { resource: "@ClearSearchBundle/Resources/config/services.yml" }
    - { resource: "@ClearOAuthBundle/Resources/config/services.yml" }
    - { resource: "@ClearUserBundle/Resources/config/services.yml" }
    - { resource: "@ClearFileStorageBundle/Resources/config/services.yml" }
    - { resource: "@ClearSecurityBundle/Resources/config/services.yml" }
    - { resource: "@ClearCompanyBundle/Resources/config/services.yml" }
    - { resource: "@ClearNotificationBundle/Resources/config/services.yml" }
    - { resource: "doctrine_extensions.yml" }
    - { resource: "@ClearLanguageBundle/Resources/config/services.yml" }
    - { resource: "@ClearLogBundle/Resources/config/services.yml" }
    - { resource: "@ClearPagesBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true, enabled: true}
    serializer: { enable_annotations: true, enabled: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        mappings:
            gedmo_tree:
                type: annotation
                prefix: Gedmo\Tree\Entity
                dir: "%kernel.root_dir%/../vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity"
                alias: GedmoTree # (optional) it will default to the name set for the mapping
                is_bundle: false

        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Activate the extensions
stof_doctrine_extensions:
    default_locale: '%locale%'
    orm:
        default:
            tree: true
            timestampable: true
            sluggable: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

# Fos rest Configuration
fos_rest:
    body_converter:
        enabled: true
    routing_loader:
        default_format: json
        include_format: true
    view:
        view_response_listener: 'force'
        formats:
            xml:  true
            json: true
        templating_formats:
            html: true
    format_listener:
        rules:
              - { path: '^/api',  priorities: ['json'], fallback_format: json, prefer_extension: true }
              - { path: '^/', priorities: [ 'json'], fallback_format: json, prefer_extension: true }
              #- { path: '^/', priorities: [ 'text/html', '*/*'], fallback_format: html, prefer_extension: true }

fos_elastica:
    clients:
        default:
            host: "%elastica_host%"
            port: "%elastica_port%"
    indexes:
        app_admin:
            index_name: "app_admin_%kernel.environment%"
            client: default
            types:
                content:
                    mappings:
                        id: ~
                        title: ~
                        contentList: ~
                        isArticle: ~
                        updatedAt:
                            type: "date"
                        contentType:
                            type: "object"
                            properties:
                                id: ~
                        tags:
                            type: "object"
                            properties:
                                id:
                                    type: integer
                        categories:
                            type: "object"
                            properties:
                                id:
                                    type: integer
                        roles:
                            type: "object"
                            properties:
                                id:
                                    type: integer
                        companies:
                            type: "object"
                            properties:
                                id:
                                    type: integer
                        status: ~
                        user:
                            type: "object"
                            properties:
                                id:
                                    type: integer
                        language:
                            type: "object"
                            properties:
                                id:
                                    type: integer
                    persistence:
                        driver: orm
                        model: Clear\ContentBundle\Entity\Content
                        provider: ~
                        finder: ~
#        app_pages:
#            index_name: "app_pages_%kernel.environment%"
#            client: default
#            types:


knp_paginator:
    page_range: "%content_size%"                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
nelmio_api_doc: ~

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
        forced_allow_origin_value: ~
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600
        '^/':
            origin_regex: true
            allow_origin: ['*']
            allow_headers: ['*']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600
#Configuration OAuth Server bundle
fos_oauth_server:
    db_driver: orm
    client_class:        Clear\OAuthBundle\Entity\Client
    access_token_class:  Clear\OAuthBundle\Entity\AccessToken
    refresh_token_class: Clear\OAuthBundle\Entity\RefreshToken
    auth_code_class:     Clear\OAuthBundle\Entity\AuthCode
    service:
        user_provider: custom.user_provider.email
        options:
            access_token_lifetime: 2592000
#Configuration User bundle
fos_user:
    db_driver: orm
    user_class: Clear\UserBundle\Entity\User
    firewall_name: api
    from_email:
        address: noreply@clearassured.co.uk
        sender_name: Clear Assured
    registration:
        form:
            type: Clear\UserBundle\Form\RegistrationType

#Configuration Vich bundle
vich_uploader:
    db_driver: orm
    mappings:
        content_images:
            uri_prefix:         /uploads/images/content
            upload_destination: '%kernel.root_dir%/../web/uploads/images/content'

            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true
            namer:              vich_uploader.namer_uniqid
            #directory_namer:    file.upload.directory.namer
    metadata:
            auto_detection: false
            directories:
                - {path: '%kernel.root_dir%/config/vich_uploader', namespace_prefix: 'Clear'}

#Configuration JMS serializer
jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: FOS\UserBundle
                path: '%kernel.root_dir%/serializer/FOSUB'
            KnpPaginatorBundle:
                namespace_prefix: Knp\Bundle\PaginatorBundle
                path: %kernel.root_dir%/config/serializer/KnpPaginatorBundle
            KnpPager:
                namespace_prefix: Knp\Component\Pager
                path: %kernel.root_dir%/config/serializer/KnpPager

#Configuration Monolog
monolog:
    channels: ['db']
    handlers:
        db:
            channels: ['db']
            type: service
            id: monolog.db_handler
#Configuration Migration
doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: false